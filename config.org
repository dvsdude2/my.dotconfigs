#+TITLE: dvsconfig
#+AUTHOR: dvsdude


* PACKAGE MANAGEMENT
  ** Setup package.el to work with MELPA.
  
   #+begin_src emacs-lisp
     (require 'package)
     (add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
     (package-refresh-contents)
     (package-initialize) 
   #+end_src

  ** Installing use-package

   #+begin_src emacs-lisp
    (unless (package-installed-p 'use-package)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
   #+end_src
* EVIL MODE

   #+begin_src emacs-lisp
(use-package evil
  :ensure t
  :init      ;; tweak evil's configuration before loading it
  (setq evil-want-integration t) ;; This is optional since it's already set to t by default.
  (setq evil-want-keybinding nil)
  (setq evil-vsplit-window-right t)
  (setq evil-split-window-below t)
  (evil-mode))
(use-package evil-collection
  :after evil
  :config
  (setq evil-collection-mode-list '(dashboard dired ibuffer))
  (evil-collection-init))
(use-package evil-tutor)
   #+end_src
* FONT

   #+begin_src emacs-lisp 
(set-face-attribute 'default nil
  :font "Source Code Pro"
  :height 110
  :weight 'medium)
(set-face-attribute 'variable-pitch nil
  :font "Ubuntu Nerd Font"
  :height 120
  :weight 'medium)
(set-face-attribute 'fixed-pitch nil
  :font "Source Code Pro"
  :height 110
  :weight 'medium)
;; Makes commented text and keywords italics.
;; This is working in emacsclient but not emacs.
;; Your font must have an italic face available.
(set-face-attribute 'font-lock-comment-face nil
  :slant 'italic)
(set-face-attribute 'font-lock-keyword-face nil
  :slant 'italic)

;; Uncomment the following line if line spacing needs adjusting.
(setq-default line-spacing 0.12)

;; Needed if using emacsclient. Otherwise, your fonts will be smaller than expected.
(add-to-list 'default-frame-alist '(font . "Source Code Pro-11"))
;; changes certain keywords to symbols, such as lamda!
(setq global-prettify-symbols-mode t)
   #+end_src

* Zooming in and out
you can use the bindings CTRL plus =/- for zooming in/out. you can also use CTRL plus mouse wh

   #+begin_src emacs-lisp 
;; zoom in/out like we do everywhere else.
(global-set-key (kbd "C-=") 'text-scale-increase)
(global-set-key (kbd "C--") 'text-scale-decrease)
(global-set-key (kbd "<C-wheel-up>") 'text-scale-increase)
(global-set-key (kbd "<C-wheel-down>") 'text-scale-decrease)
   #+end_src

* THEME

   #+begin_src emacs-lisp
(use-package doom-themes :ensure t)
(setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
      doom-themes-enable-italic t) ; if nil, italics is universally disabled
(load-theme 'doom-one t)
   #+end_src

   #+begin_src emacs-lisp
(global-display-line-numbers-mode 1)
(global-visual-line-mode t) 
   #+end_src
* DOOM'S MODLINE 
   #+begin_src emacs-lisp
(use-package doom-modeline)
(doom-modeline-mode 1)
   #+end_src

* WHICH KEY

   #+begin_src emacs-lisp
(use-package which-key
  :init
  (setq which-key-side-window-location 'bottom
        which-key-sort-order #'which-key-key-order-alpha
        which-key-sort-uppercase-first nil
        which-key-add-column-padding 1
        which-key-max-display-columns nil
        which-key-min-display-lines 6
        which-key-side-window-slot -10
        which-key-side-window-max-height 0.25
        which-key-idle-delay 0.8
        which-key-max-description-length 25
        which-key-allow-imprecise-window-fit t
        which-key-separator " â†’ " ))
(which-key-mode)
   #+end_src
